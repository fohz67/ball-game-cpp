"use strict";(self.webpackChunkBall_Game_C_Documentation=self.webpackChunkBall_Game_C_Documentation||[]).push([[374],{4889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"game-engine/update","title":"Update","description":"The update system processes game logic and synchronizes entity states.","source":"@site/docs/game-engine/update.md","sourceDirName":"game-engine","slug":"/game-engine/update","permalink":"/ball-game-cpp/docs/game-engine/update","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Update","slug":"/game-engine/update"},"sidebar":"tutorialSidebar","previous":{"title":"Rendering","permalink":"/ball-game-cpp/docs/game-engine/rendering"},"next":{"title":"Protocol","permalink":"/ball-game-cpp/docs/protocol"}}');var s=n(4848),a=n(8453);const d={title:"Update",slug:"/game-engine/update"},o="Update System",r={},c=[{value:"Updating Entity Position:",id:"updating-entity-position",level:2},{value:"Changing Text:",id:"changing-text",level:2},{value:"Modifying Text Size:",id:"modifying-text-size",level:2},{value:"Updating Text Font:",id:"updating-text-font",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"update-system",children:"Update System"})}),"\n",(0,s.jsx)(t.p,{children:"The update system processes game logic and synchronizes entity states."}),"\n",(0,s.jsx)(t.h2,{id:"updating-entity-position",children:"Updating Entity Position:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"system.updateEntityPosition(entityId, entities, {x, y}, posId);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"changing-text",children:"Changing Text:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'system.updateText(entity, "New Score: 100");\n'})}),"\n",(0,s.jsx)(t.h2,{id:"modifying-text-size",children:"Modifying Text Size:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"system.updateTextSize(entityId, entities, 24);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"updating-text-font",children:"Updating Text Font:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'system.updateTextFont(entity, "arial.ttf");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The update system ensures that ",(0,s.jsx)(t.strong,{children:"all entities remain synchronized"})," with game logic."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(6540);const s={},a=i.createContext(s);function d(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);