"use strict";(self.webpackChunkBall_Game_C_Documentation=self.webpackChunkBall_Game_C_Documentation||[]).push([[757],{4789:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>x,frontMatter:()=>d,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"protocol/index","title":"Protocol","description":"This document provides an overview of the communication protocol for the Ball Game server. It defines the purpose, payload, and transmission method for each operation code (OpCode).","source":"@site/docs/protocol/index.md","sourceDirName":"protocol","slug":"/protocol","permalink":"/ball-game-cpp/docs/protocol","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Protocol","slug":"/protocol"},"sidebar":"tutorialSidebar","previous":{"title":"Update","permalink":"/ball-game-cpp/docs/game-engine/update"},"next":{"title":"Overview","permalink":"/ball-game-cpp/docs/server"}}');var i=s(4848),r=s(8453);const d={title:"Protocol",slug:"/protocol"},t="Ball Game Protocol Documentation",o={},c=[{value:"Message Structure",id:"message-structure",level:2},{value:"OpCode Definitions",id:"opcode-definitions",level:2},{value:"0. <strong>PINGPONG</strong>",id:"0-pingpong",level:3},{value:"1. <strong>CREATE_WORLD</strong>",id:"1-create_world",level:3},{value:"10. <strong>JOIN_SERVER</strong>",id:"10-join_server",level:3},{value:"20. <strong>CREATE_PLAYER</strong>",id:"20-create_player",level:3},{value:"21. <strong>UPDATE_PLAYER</strong>",id:"21-update_player",level:3},{value:"22. <strong>DELETE_PLAYER</strong>",id:"22-delete_player",level:3},{value:"30. <strong>SPAWN_PELLETS</strong>",id:"30-spawn_pellets",level:3},{value:"31. <strong>SPAWN_PELLET</strong>",id:"31-spawn_pellet",level:3},{value:"40. <strong>UPDATE_GAME_STATE</strong>",id:"40-update_game_state",level:3},{value:"41. <strong>UPDATE_LEADERBOARD</strong>",id:"41-update_leaderboard",level:3},{value:"50. <strong>DELETE_ENTITY</strong>",id:"50-delete_entity",level:3},{value:"60. <strong>UPDATE_MOUSE_POSITION</strong>",id:"60-update_mouse_position",level:3},{value:"Notes",id:"notes",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ball-game-protocol-documentation",children:"Ball Game Protocol Documentation"})}),"\n",(0,i.jsx)(n.p,{children:"This document provides an overview of the communication protocol for the Ball Game server. It defines the purpose, payload, and transmission method for each operation code (OpCode)."}),"\n",(0,i.jsx)(n.h2,{id:"message-structure",children:"Message Structure"}),"\n",(0,i.jsx)(n.p,{children:"All messages follow a structured format:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Size (bytes)"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"OpCode"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uint8_t"})}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"Identifies the operation (see below)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Payload"})}),(0,i.jsx)(n.td,{children:"Varies"}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:"Data relevant to the specific operation."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Each message begins with an ",(0,i.jsx)(n.strong,{children:"OpCode"}),", followed by a ",(0,i.jsx)(n.strong,{children:"payload"})," containing relevant data."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"opcode-definitions",children:"OpCode Definitions"}),"\n",(0,i.jsxs)(n.h3,{id:"0-pingpong",children:["0. ",(0,i.jsx)(n.strong,{children:"PINGPONG"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"0"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Used to test the connection between the client and the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timestamp"})," (uint64_t): The timestamp when the packet is sent."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Send From"}),": Client."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"1-create_world",children:["1. ",(0,i.jsx)(n.strong,{children:"CREATE_WORLD"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"1"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends the game world configuration to the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"size"})," (uint16_t): The world size."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Client."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"10-join_server",children:["10. ",(0,i.jsx)(n.strong,{children:"JOIN_SERVER"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"10"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sent when a player joins the game."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),": None."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Server."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"20-create_player",children:["20. ",(0,i.jsx)(n.strong,{children:"CREATE_PLAYER"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"20"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends new player data to all clients."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (uint32_t): ID of the player."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"color"})," (uint32_t): Color of the nickname."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cellColor"})," (uint32_t): Color of the cells."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"21-update_player",children:["21. ",(0,i.jsx)(n.strong,{children:"UPDATE_PLAYER"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"21"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends viewport updates to clients."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x"})," (double): Viewport X position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"y"})," (double): Viewport Y position."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Client."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"22-delete_player",children:["22. ",(0,i.jsx)(n.strong,{children:"DELETE_PLAYER"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"22"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Notifies all clients that a player has been removed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"playerId"})," (uint32_t): ID of the deleted player."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"30-spawn_pellets",children:["30. ",(0,i.jsx)(n.strong,{children:"SPAWN_PELLETS"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"30"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends all pellet data to the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (uint32_t): ID of the pellet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x"})," (double): X position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"y"})," (double): Y position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"radius"})," (double): Radius of the pellet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"color"})," (uint32_t): Color of the pellet."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Client."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"31-spawn_pellet",children:["31. ",(0,i.jsx)(n.strong,{children:"SPAWN_PELLET"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"31"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends a single pellet spawn event."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (uint32_t): ID of the pellet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x"})," (double): X position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"y"})," (double): Y position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"radius"})," (double): Radius of the pellet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"color"})," (uint32_t): Color of the pellet."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"40-update_game_state",children:["40. ",(0,i.jsx)(n.strong,{children:"UPDATE_GAME_STATE"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"40"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends all cells' updates to clients."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ownerId"})," (uint32_t): ID of the owner."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (uint32_t): ID of the cell."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x"})," (double): X position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"y"})," (double): Y position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"radius"})," (double): Radius of the cell."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"41-update_leaderboard",children:["41. ",(0,i.jsx)(n.strong,{children:"UPDATE_LEADERBOARD"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"41"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends leaderboard updates to all clients."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"leaderboard"})," (vector string): List of top players."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"50-delete_entity",children:["50. ",(0,i.jsx)(n.strong,{children:"DELETE_ENTITY"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"50"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Notifies all clients that an entity has been removed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entityType"})," (uint8_t): Type of entity (0 = player, others = non-player entities)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entityId"})," (uint32_t): ID of the deleted entity."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": All clients."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"60-update_mouse_position",children:["60. ",(0,i.jsx)(n.strong,{children:"UPDATE_MOUSE_POSITION"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Value"}),": ",(0,i.jsx)(n.code,{children:"60"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Sends the player's mouse position to the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Payload"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"normX"})," (double): Normalized X coordinate."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"normY"})," (double): Normalized Y coordinate."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sent To"}),": Server."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"SmartBuffer"})," ensures efficient serialization and deserialization of messages."]}),"\n",(0,i.jsx)(n.li,{children:"Players' states are updated asynchronously to minimize latency."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Protocol"})," handles routing and parsing of messages between the server and clients."]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var l=s(6540);const i={},r=l.createContext(i);function d(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);