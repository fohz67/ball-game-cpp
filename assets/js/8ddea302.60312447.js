"use strict";(self.webpackChunkBall_Game_C_Documentation=self.webpackChunkBall_Game_C_Documentation||[]).push([[124],{3178:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"client/components","title":"Components","description":"This document describes the various components used in the client-side of the Ball Game. Components are modular elements that define the properties and behavior of entities in the game.","source":"@site/docs/client/components.md","sourceDirName":"client","slug":"/client/components","permalink":"/docs/client/components","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Components","slug":"/client/components"},"sidebar":"tutorialSidebar","previous":{"title":"Client Network","permalink":"/docs/client/network"},"next":{"title":"Game Mechanics","permalink":"/docs/client/game-mechanics"}}');var t=s(4848),i=s(8453);const o={title:"Components",slug:"/client/components"},d="Client Components Documentation",l={},c=[{value:"Overview",id:"overview",level:2},{value:"1. <strong>HUD (Heads-Up Display)</strong>",id:"1-hud-heads-up-display",level:2},{value:"<strong>Main Properties</strong>",id:"main-properties",level:3},{value:"2. <strong>Leaderboard</strong>",id:"2-leaderboard",level:2},{value:"<strong>Main Properties</strong>",id:"main-properties-1",level:3},{value:"3. <strong>Viewport</strong>",id:"3-viewport",level:2},{value:"<strong>Main Properties</strong>",id:"main-properties-2",level:3},{value:"4. <strong>Zoom</strong>",id:"4-zoom",level:2},{value:"<strong>Main Properties</strong>",id:"main-properties-3",level:3},{value:"5. <strong>Hotkeys</strong>",id:"5-hotkeys",level:2},{value:"Summary",id:"summary",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"client-components-documentation",children:"Client Components Documentation"})}),"\n",(0,t.jsx)(n.p,{children:"This document describes the various components used in the client-side of the Ball Game. Components are modular elements that define the properties and behavior of entities in the game."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The client-side architecture follows a component-based system to define entity attributes, such as visuals, position, movement, and interaction with the game world. Below are the key components used in the client."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"1-hud-heads-up-display",children:["1. ",(0,t.jsx)(n.strong,{children:"HUD (Heads-Up Display)"})]}),"\n",(0,t.jsx)(n.p,{children:"The HUD component is responsible for rendering real-time game information, including player statistics, the leaderboard, and other UI elements."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Displays game stats (score, mass, cell count)."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Manages real-time updates for UI elements."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Handles UI styling, such as font, color, and layout."})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"main-properties",children:(0,t.jsx)(n.strong,{children:"Main Properties"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"backgroundColor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"vector double"})}),(0,t.jsx)(n.td,{children:"HUD background color."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"padding"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"double"})}),(0,t.jsx)(n.td,{children:"Padding around HUD elements."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"textColor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"vector double"})}),(0,t.jsx)(n.td,{children:"Color of text elements."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"2-leaderboard",children:["2. ",(0,t.jsx)(n.strong,{children:"Leaderboard"})]}),"\n",(0,t.jsx)(n.p,{children:"The leaderboard component tracks the top players in the game based on mass or score."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Updates dynamically as players gain mass."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Stores and sorts player rankings."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Renders leaderboard data on the HUD."})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"main-properties-1",children:(0,t.jsx)(n.strong,{children:"Main Properties"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"maxEntries"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsx)(n.td,{children:"Maximum number of players displayed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"title"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"std::string"})}),(0,t.jsx)(n.td,{children:"Leaderboard title."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"contentSize"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"double"})}),(0,t.jsx)(n.td,{children:"Font size for player names."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"3-viewport",children:["3. ",(0,t.jsx)(n.strong,{children:"Viewport"})]}),"\n",(0,t.jsx)(n.p,{children:"The viewport controls the camera's position and movement within the game world, allowing for smooth tracking of the player's entity."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Interpolates camera movement for smoother gameplay."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Centers the view on the player's position."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Handles zoom functionality."})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"main-properties-2",children:(0,t.jsx)(n.strong,{children:"Main Properties"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"previousViewport"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pair double,double"})}),(0,t.jsx)(n.td,{children:"Stores previous camera position for interpolation."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"interpolationFactor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"double"})}),(0,t.jsx)(n.td,{children:"Determines smoothness of camera movement."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"4-zoom",children:["4. ",(0,t.jsx)(n.strong,{children:"Zoom"})]}),"\n",(0,t.jsx)(n.p,{children:"The zoom component manages zooming in and out within the game world, ensuring smooth scaling of the viewport."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Adjusts zoom level dynamically."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Prevents excessive zooming."})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"main-properties-3",children:(0,t.jsx)(n.strong,{children:"Main Properties"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"zoomSpeed"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"double"})}),(0,t.jsx)(n.td,{children:"Determines zoom intensity."})]})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"5-hotkeys",children:["5. ",(0,t.jsx)(n.strong,{children:"Hotkeys"})]}),"\n",(0,t.jsx)(n.p,{children:"Hotkeys manage keyboard and mouse input, allowing players to interact with the game through specific commands."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Listens for key and mouse inputs."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Processes hotkey events like zooming or toggling UI elements."})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"These components work together to provide a smooth and interactive client-side experience. Each component is responsible for a different aspect of the game's functionality, ensuring a modular and scalable design."})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);